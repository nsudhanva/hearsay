services:
  client:
    build: ./client
    command: yarn start
    environment:
      - CHOKIDAR_USEPOLLING=true
    expose:
      - 3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.client.rule=Host(`hearsay.localhost`)
      - traefik.port=80
    stdin_open: true
    volumes:
      - ./client:/app
      - /app/node_modules
  db:
    environment:
      - POSTGRES_USER=hearsay
      - POSTGRES_PASSWORD=hearsay
      - POSTGRES_DB=hearsay
    expose:
      - 5432
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  pgadmin:
    depends_on:
      - db
    env_file:
      - .env.db.dev
    image: dpage/pgadmin4
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=HOST(`pgadmin.hearsay.localhost`)
      - traefik.port=80
    restart: always
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  traefik:
    image: traefik:v2.2
    ports:
      - '80:80'
    volumes:
      - $PWD/traefik.dev.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock:ro
  web:
    build: ./app
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    depends_on:
      - db
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://hearsay:hearsay@db:5432/hearsay
    expose:
      - 8000
    labels:
      - traefik.enable=true
      - traefik.http.routers.django.rule=Host(`api.hearsay.localhost`)
      - traefik.port=80
    volumes:
      - ./app:/app
version: '3.8'
volumes:
  pgadmin-data: null
  postgres_data: null